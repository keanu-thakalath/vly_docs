Props:
name='size' type_=reflex.vars.Var[typing.Literal['1', '2']] description=' Dropdown Menu Content size "1" - "2"'
name='variant' type_=reflex.vars.Var[typing.Literal['solid', 'soft']] description=' Variant of Dropdown Menu Content: "solid" | "soft"'
name='color_scheme' type_=reflex.vars.Var[typing.Literal['tomato', 'red', 'ruby', 'crimson', 'pink', 'plum', 'purple', 'violet', 'iris', 'indigo', 'blue', 'cyan', 'teal', 'jade', 'green', 'grass', 'brown', 'orange', 'sky', 'mint', 'lime', 'yellow', 'amber', 'gold', 'bronze', 'gray']] description=' Override theme color for Dropdown Menu Content'
name='high_contrast' type_=reflex.vars.Var[bool] description=' Renders the Dropdown Menu Content in higher contrast'
name='as_child' type_=reflex.vars.Var[bool] description=' Change the default rendered element for the one passed as a child, merging their props and behavior. Defaults to False.'
name='loop' type_=reflex.vars.Var[bool] description=' When True, keyboard navigation will loop from last item to first, and vice versa. Defaults to False.'
name='force_mount' type_=reflex.vars.Var[bool] description=' Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries.'
name='side' type_=reflex.vars.Var[typing.Literal['top', 'right', 'bottom', 'left']] description=' The preferred side of the trigger to render against when open. Will be reversed when collisions occur and `avoid_collisions` is enabled.The position of the tooltip. Defaults to "top".'
name='side_offset' type_=reflex.vars.Var[typing.Union[float, int]] description=' The distance in pixels from the trigger. Defaults to 0.'
name='align' type_=reflex.vars.Var[typing.Literal['start', 'center', 'end']] description=' The preferred alignment against the trigger. May change when collisions occur. Defaults to "center".'
name='align_offset' type_=reflex.vars.Var[typing.Union[float, int]] description=' An offset in pixels from the "start" or "end" alignment options.'
name='avoid_collisions' type_=reflex.vars.Var[bool] description=' When true, overrides the side and align preferences to prevent collisions with boundary edges. Defaults to True.'
name='collision_padding' type_=reflex.vars.Var[typing.Union[float, int, typing.Dict[str, typing.Union[float, int]]]] description=' The distance in pixels from the boundary edges where collision detection should occur. Accepts a number (same for all sides), or a partial padding object, for example: { "top": 20, "left": 20 }. Defaults to 0.'
name='arrow_padding' type_=reflex.vars.Var[typing.Union[float, int]] description=' The padding between the arrow and the edges of the content. If your content has border-radius, this will prevent it from overflowing the corners. Defaults to 0.'
name='sticky' type_=reflex.vars.Var[typing.Literal['partial', 'always']] description=' The sticky behavior on the align axis. "partial" will keep the content in the boundary as long as the trigger is at least partially in the boundary whilst "always" will keep the content in the boundary regardless. Defaults to "partial".'
name='hide_when_detached' type_=reflex.vars.Var[bool] description=' Whether to hide the content when the trigger becomes fully occluded. Defaults to False.'

Events:
('on_close_auto_focus', {'description': 'The on_close_auto_focus event handler is called when focus moves to the trigger after closing. It can be prevented by calling event.preventDefault.'})
('on_escape_key_down', {'description': 'The on_escape_key_down event handler is called when the escape key is down. It can be prevented by calling event.preventDefault.'})
('on_pointer_down_outside', {'description': 'The on_pointer_down_outside event handler is called when a pointer event occurs outside the bounds of the component. It can be prevented by calling event.preventDefault.'})
('on_focus_outside', {'description': 'The on_focus_outside event handler is called when the user focuses outside the component.'})
('on_interact_outside', {'description': 'The on_interact_outside event handler is called when the user interacts outside the component.'})