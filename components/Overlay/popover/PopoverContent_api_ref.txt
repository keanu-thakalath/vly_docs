Props:
name='size' type_=reflex.vars.Var[typing.Literal['1', '2', '3', '4']] description=' Size of the button: "1" | "2" | "3" | "4"'
name='side' type_=reflex.vars.Var[typing.Literal['top', 'right', 'bottom', 'left']] description=' The preferred side of the anchor to render against when open. Will be reversed when collisions occur and avoidCollisions is enabled.'
name='side_offset' type_=reflex.vars.Var[int] description=' The distance in pixels from the anchor.'
name='align' type_=reflex.vars.Var[typing.Literal['start', 'center', 'end']] description=' The preferred alignment against the anchor. May change when collisions occur.'
name='align_offset' type_=reflex.vars.Var[int] description=' The vertical distance in pixels from the anchor.'
name='avoid_collisions' type_=reflex.vars.Var[bool] description=' When true, overrides the side andalign preferences to prevent collisions with boundary edges.'

Events:
('on_open_auto_focus', {'description': 'The on_open_auto_focus event handler is called when the component opens and the focus is returned to the first item.'})
('on_close_auto_focus', {'description': 'The on_close_auto_focus event handler is called when focus moves to the trigger after closing. It can be prevented by calling event.preventDefault.'})
('on_escape_key_down', {'description': 'The on_escape_key_down event handler is called when the escape key is down. It can be prevented by calling event.preventDefault.'})
('on_pointer_down_outside', {'description': 'The on_pointer_down_outside event handler is called when a pointer event occurs outside the bounds of the component. It can be prevented by calling event.preventDefault.'})
('on_focus_outside', {'description': 'The on_focus_outside event handler is called when the user focuses outside the component.'})
('on_interact_outside', {'description': 'The on_interact_outside event handler is called when the user interacts outside the component.'})