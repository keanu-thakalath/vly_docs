Props:
name='text' type_=reflex.vars.Var[str] description=' The text label for the checkbox.'
name='spacing' type_=reflex.vars.Var[typing.Literal['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']] description=' The gap between the checkbox and the label.'
name='size' type_=reflex.vars.Var[typing.Literal['1', '2', '3']] description=' The size of the checkbox "1" - "3".'
name='as_child' type_=reflex.vars.Var[bool] description=' Change the default rendered element for the one passed as a child, merging their props and behavior.'
name='variant' type_=reflex.vars.Var[typing.Literal['classic', 'surface', 'soft']] description=' Variant of checkbox: "classic" | "surface" | "soft"'
name='color_scheme' type_=reflex.vars.Var[typing.Literal['tomato', 'red', 'ruby', 'crimson', 'pink', 'plum', 'purple', 'violet', 'iris', 'indigo', 'blue', 'cyan', 'teal', 'jade', 'green', 'grass', 'brown', 'orange', 'sky', 'mint', 'lime', 'yellow', 'amber', 'gold', 'bronze', 'gray']] description=' Override theme color for checkbox'
name='high_contrast' type_=reflex.vars.Var[bool] description=' Whether to render the checkbox with higher contrast color against background'
name='default_checked' type_=reflex.vars.Var[bool] description=' Whether the checkbox is checked by default'
name='checked' type_=reflex.vars.Var[bool] description=' Whether the checkbox is checked'
name='disabled' type_=reflex.vars.Var[bool] description=' Whether the checkbox is disabled'
name='required' type_=reflex.vars.Var[bool] description=' Whether the checkbox is required'
name='name' type_=reflex.vars.Var[str] description=' The name of the checkbox control when submitting the form.'
name='value' type_=reflex.vars.Var[str] description=' The value of the checkbox control when submitting the form.'

Events:
('on_change', {'description': 'The on_change event handler is called when the value or checked state of the component changes.'})