Props:
name='variant' type_=reflex.vars.Var[typing.Literal['solid', 'soft']] description=' The variant of the select content'
name='color_scheme' type_=reflex.vars.Var[typing.Literal['tomato', 'red', 'ruby', 'crimson', 'pink', 'plum', 'purple', 'violet', 'iris', 'indigo', 'blue', 'cyan', 'teal', 'jade', 'green', 'grass', 'brown', 'orange', 'sky', 'mint', 'lime', 'yellow', 'amber', 'gold', 'bronze', 'gray']] description=' The color of the select content'
name='high_contrast' type_=reflex.vars.Var[bool] description=' Whether to render the select content with higher contrast color against background'
name='position' type_=reflex.vars.Var[typing.Literal['item-aligned', 'popper']] description=' The positioning mode to use, item-aligned is the default and behaves similarly to a native MacOS menu by positioning content relative to the active item. popper positions content in the same way as our other primitives, for example Popover or DropdownMenu.'
name='side' type_=reflex.vars.Var[typing.Literal['top', 'right', 'bottom', 'left']] description=' The preferred side of the anchor to render against when open. Will be reversed when collisions occur and avoidCollisions is enabled. Only available when position is set to popper.'
name='side_offset' type_=reflex.vars.Var[int] description=' The distance in pixels from the anchor. Only available when position is set to popper.'
name='align' type_=reflex.vars.Var[typing.Literal['start', 'center', 'end']] description=' The preferred alignment against the anchor. May change when collisions occur. Only available when position is set to popper.'
name='align_offset' type_=reflex.vars.Var[int] description=' The vertical distance in pixels from the anchor. Only available when position is set to popper.'

Events:
('on_close_auto_focus', {'description': 'The on_close_auto_focus event handler is called when focus moves to the trigger after closing. It can be prevented by calling event.preventDefault.'})
('on_escape_key_down', {'description': 'The on_escape_key_down event handler is called when the escape key is down. It can be prevented by calling event.preventDefault.'})
('on_pointer_down_outside', {'description': 'The on_pointer_down_outside event handler is called when a pointer event occurs outside the bounds of the component. It can be prevented by calling event.preventDefault.'})