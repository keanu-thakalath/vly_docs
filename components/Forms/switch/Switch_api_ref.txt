Props:
name='as_child' type_=reflex.vars.Var[bool] description=' Change the default rendered element for the one passed as a child, merging their props and behavior.'
name='default_checked' type_=reflex.vars.Var[bool] description=' Whether the switch is checked by default'
name='checked' type_=reflex.vars.Var[bool] description=' Whether the switch is checked'
name='disabled' type_=reflex.vars.Var[bool] description=' If true, prevent the user from interacting with the switch'
name='required' type_=reflex.vars.Var[bool] description=' If true, the user must interact with the switch to submit the form'
name='name' type_=reflex.vars.Var[str] description=' The name of the switch (when submitting a form)'
name='value' type_=reflex.vars.Var[str] description=' The value associated with the "on" position'
name='size' type_=reflex.vars.Var[typing.Literal['1', '2', '3']] description=' Switch size "1" - "4"'
name='variant' type_=reflex.vars.Var[typing.Literal['classic', 'surface', 'soft']] description=' Variant of switch: "classic" | "surface" | "soft"'
name='color_scheme' type_=reflex.vars.Var[typing.Literal['tomato', 'red', 'ruby', 'crimson', 'pink', 'plum', 'purple', 'violet', 'iris', 'indigo', 'blue', 'cyan', 'teal', 'jade', 'green', 'grass', 'brown', 'orange', 'sky', 'mint', 'lime', 'yellow', 'amber', 'gold', 'bronze', 'gray']] description=' Override theme color for switch'
name='high_contrast' type_=reflex.vars.Var[bool] description=' Whether to render the switch with higher contrast color against background'
name='radius' type_=reflex.vars.Var[typing.Literal['none', 'small', 'full']] description=' Override theme radius for switch: "none" | "small" | "full"'

Events:
('on_change', {'description': 'The on_change event handler is called when the value or checked state of the component changes.'})