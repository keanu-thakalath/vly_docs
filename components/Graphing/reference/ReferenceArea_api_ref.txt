Props:
name='stroke' type_=reflex.vars.Var[str] description=' Stroke color'
name='fill' type_=reflex.vars.Var[str] description=' Fill color'
name='fill_opacity' type_=reflex.vars.Var[float] description=' The opacity of area.'
name='x_axis_id' type_=reflex.vars.Var[typing.Union[str, int]] description=' The id of x-axis which is corresponding to the data.'
name='y_axis_id' type_=reflex.vars.Var[typing.Union[str, int]] description=' The id of y-axis which is corresponding to the data.'
name='x1' type_=reflex.vars.Var[typing.Union[str, int]] description=' A boundary value of the area. If the specified x-axis is a number axis, the type of x must be Number. If the specified x-axis is a category axis, the value of x must be one of the categorys. If one of x1 or x2 is invalidate, the area will cover along x-axis.'
name='x2' type_=reflex.vars.Var[typing.Union[str, int]] description=' A boundary value of the area. If the specified x-axis is a number axis, the type of x must be Number. If the specified x-axis is a category axis, the value of x must be one of the categorys. If one of x1 or x2 is invalidate, the area will cover along x-axis.'
name='y1' type_=reflex.vars.Var[typing.Union[str, int]] description=' A boundary value of the area. If the specified y-axis is a number axis, the type of y must be Number. If the specified y-axis is a category axis, the value of y must be one of the categorys. If one of y1 or y2 is invalidate, the area will cover along y-axis.'
name='y2' type_=reflex.vars.Var[typing.Union[str, int]] description=' A boundary value of the area. If the specified y-axis is a number axis, the type of y must be Number. If the specified y-axis is a category axis, the value of y must be one of the categorys. If one of y1 or y2 is invalidate, the area will cover along y-axis.'
name='if_overflow' type_=reflex.vars.Var[typing.Literal['discard', 'hidden', 'visible', 'extendDomain']] description=" Defines how to draw the reference line if it falls partly outside the canvas. If set to 'discard', the reference line will not be drawn at all. If set to 'hidden', the reference line will be clipped to the canvas. If set to 'visible', the reference line will be drawn completely. If set to 'extendDomain', the domain of the overflown axis will be extended such that the reference line fits into the canvas."
name='is_front' type_=reflex.vars.Var[bool] description=' If set true, the line will be rendered in front of bars in BarChart, etc.'