Props:
name='data' type_=reflex.vars.Var[typing.List[typing.Dict[str, typing.Any]]] description=' The source data, in which each element is an object.'
name='z_axis_id' type_=reflex.vars.Var[str] description=' The id of z-axis which is corresponding to the data.'
name='line' type_=reflex.vars.Var[bool] description=' If false set, line will not be drawn. If true set, line will be drawn which have the props calculated internally.'
name='shape' type_=reflex.vars.Var[typing.Literal['square', 'circle', 'cross', 'diamond', 'star', 'triangle', 'wye']] description=" If a string set, specified symbol will be used to show scatter item. 'circle' | 'cross' | 'diamond' | 'square' | 'star' | 'triangle' | 'wye'"
name='line_type' type_=reflex.vars.Var[typing.Literal['joint', 'fitting']] description=" If 'joint' set, line will generated by just jointing all the points. If 'fitting' set, line will be generated by fitting algorithm. 'joint' | 'fitting'"
name='fill' type_=reflex.vars.Var[str] description=' The fill'
name='name' type_=reflex.vars.Var[typing.Union[str, int]] description=' the name'
name='layout' type_=reflex.vars.Var[typing.Literal['horizontal', 'vertical']] description=" The layout of bar in the chart, usually inherited from parent. 'horizontal' | 'vertical'"
name='data_key' type_=reflex.vars.Var[typing.Union[str, int]] description=' The key of a group of data which should be unique in an area chart.'
name='x_axis_id' type_=reflex.vars.Var[typing.Union[str, int]] description=' The id of x-axis which is corresponding to the data.'
name='y_axis_id' type_=reflex.vars.Var[typing.Union[str, int]] description=' The id of y-axis which is corresponding to the data.'